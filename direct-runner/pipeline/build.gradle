plugins {
    id 'java'
}

group 'com.beamlocal'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    // https://mvnrepository.com/artifact/org.apache.beam/beam-sdks-java-core
    implementation group: 'org.apache.beam', name: 'beam-sdks-java-core', version: '2.41.0'

    // https://mvnrepository.com/artifact/org.apache.beam/beam-runners-google-cloud-dataflow-java
    implementation group: 'org.apache.beam', name: 'beam-runners-google-cloud-dataflow-java', version: '2.41.0'

    // https://mvnrepository.com/artifact/org.apache.beam/beam-runners-direct-java
    testImplementation group: 'org.apache.beam', name: 'beam-runners-direct-java', version: '2.41.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

abstract class deployDataflowJob extends JavaExec {
    deployDataflowJob(){
        classpath project.sourceSets.main.runtimeClasspath
        dependsOn 'build'
    }

    @Input
    String jobName = project.name

    @Input
    int numWorkers = 1

    @Input
    int maxNumWorkers = 3

    @Input
    List<String> additionalArgs = []

    @Input
    String runnerType = "DirectRunner"

    @Input
    String pubsubRootUrl = "https://pubsub.googleapis.com"

    @Override
    void exec() {
        String gcpProject
        if (hasProperty("GCP_PROJECT_ID")){
            gcpProject = property("GCP_PROJECT_ID")
        }

        String gcpRegion
        if (hasProperty("GCP_REGION")){
            gcpRegion = property("GCP_REGION")
        }

        args([
                "--project=$gcpProject",
                "--region=$gcpRegion",
                "--numWorkers=$numWorkers",
                "--maxNumWorkers=$maxNumWorkers",
                "--jobName=$jobName",
                "--runner=$runnerType",
                "--pubsubRootUrl=$pubsubRootUrl",
                "--enableStreamingEngine"
        ]
        + additionalArgs)

        super.exec()
    }
}

task deployStreamProcessingPipeline(type: deployDataflowJob){
    String username = System.getenv("USER")

    if (username == null){
        username = "nobody"
    }

    String gcpProject
    if (hasProperty("GCP_PROJECT_ID")){
        gcpProject = property("GCP_PROJECT_ID")
    }

    String gcpRegion
    if (hasProperty("GCP_REGION")){
        gcpRegion = property("GCP_REGION")
    }

    String subscriptionName
    if (hasProperty("SUBSCRIPTION_NAME")){
        subscriptionName = property("SUBSCRIPTION_NAME")
    }

    jobName = "streaming-pipeline-${username.toLowerCase()}"
    numWorkers = 1
    maxNumWorkers = 1
    runnerType = "DirectRunner"
    pubsubRootUrl = "http://localhost:8432"
    additionalArgs = [
            "--subscriptionName=projects/${gcpProject}/subscriptions/${subscriptionName}"
    ]
}